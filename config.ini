[project]

# The project name, used as the filename of the package and the PDF file. For
# example, if set to d2l-book, then will build d2l-book.zip and d2l-book.pdf
name = d2l-vn

# Book title. It will be displayed on the top-right of the HTML page and the
# front page of the PDF file
title = Đắm mình vào Học Sâu

author = Aston Zhang, Zachary C. Lipton, Mu Li, and Alexander J. Smola

translator_team = MLBVN Team

copyright = 2020, All authors. Licensed under CC-BY-SA-4.0 and MIT-0.

release = 0.14.4

[html]

# A list of links that is displayed on the navbar. A link consists of three
# items: name, URL, and a fontawesome icon
# (https://fontawesome.com/icons?d=gallery). Items are separated by commas.
header_links = GitHub, https://github.com/aivivn/d2l-vn, fab fa-github,
               Forum, https://forum.machinelearningcoban.com/, fab fa-discourse,
               English, https://www.d2l.ai/, fas fa-external-link-alt

favicon = static/favicon.png

html_logo = static/logo-with-text-vi.png

[build]

# A list of wildcards to indicate the markdown files that need to be evaluated as
# Jupyter notebooks.
notebooks = *.md */*.md

# A list of files that will be copied to the build folder.
resources = img/ data/ d2l/ d2l.bib environment.yml setup.py

# Files that will be skipped.

# Files that will be skipped.
exclusions = README.md STYLE_GUIDE.md INFO.md CHANGELOG.md CONTRIBUTING.md tests/ docs/

# If True (default), then will evaluate the notebook to obtain outputs.
eval_notebook = True

# If True, the mark the build as failed for any warning. Default is False.
warning_is_error = False

# A list of files, if anyone is modified after the last build, will re-build all
# documents.
dependencies =

tabs = mxnet, pytorch, tensorflow

[pdf]

# The file used to post-process the generated tex file.
post_latex = ./static/post_latex/main.py

latex_logo = static/logo.png
main_font = Source Serif Pro
sans_font = Source Sans Pro
mono_font = Inconsolata

[library]

version_file = d2l/__init__.py

[library-mxnet]

lib_file = d2l/mxnet.py
lib_name = np

# Map from d2l.xx to np.xx
simple_alias = ones, zeros, arange, meshgrid, sin, sinh, cos, cosh, tanh,
               linspace, exp, log, tensor -> array, normal -> random.normal,
               matmul -> dot, int32, float32, concat -> concatenate, stack, abs

# Map from d2l.xx(a, *args, **kwargs) to a.xx(*args, **kwargs)
fluent_alias = numpy -> asnumpy, reshape, to -> as_in_context, reduce_sum -> sum,
               argmax, astype

alias =
       size = lambda a: a.size
       transpose = lambda a: a.T

reverse_alias =
       d2l.size\(([\w\_\d]+)\) -> \1.size
       d2l.transpose\(([\w\_\d]+)\) -> \1.T

[library-pytorch]

lib_file = d2l/torch.py
lib_name = torch

simple_alias = ones, zeros, tensor, arange, meshgrid, sin, sinh, cos, cosh,
               tanh, linspace, exp, log, normal, matmul, int32, float32,
               concat -> cat, stack, abs

fluent_alias = numpy -> detach().numpy, size -> numel, reshape, to,
               reduce_sum -> sum, argmax, astype -> type, transpose -> t
alias =

reverse_alias =

[library-tensorflow]

lib_file = d2l/tensorflow.py
lib_name = tf

simple_alias = reshape, ones, zeros, meshgrid, sin, sinh, cos, cosh, tanh,
               linspace, exp, matmul, reduce_sum, argmax, tensor -> constant,
               arange -> range, astype -> cast, int32, float32, transpose,
               concat, stack, normal -> random.normal, abs

fluent_alias = numpy,

alias =
       size = lambda a: tf.size(a).numpy()

reverse_alias =
       d2l.size\(([\w\_\d]+)\) -> tf.size(\1).numpy()

[deploy]
s3_bucket = s3://d2l.aivivn.com

google_analytics_tracking_id = UA-153199306-1
